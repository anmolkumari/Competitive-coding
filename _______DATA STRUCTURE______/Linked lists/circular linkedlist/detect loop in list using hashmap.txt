
package link;

import java.util.*;


public class Link {
    Node Head=null;

       Node current;

    class Node{
       Node next;
       int data;
       Node(int d){
           data=d;
           next=null;
       }}

      void insert(int new_node){

       if(Head==null){

           Node node=new Node(new_node);
           Head=node;
          current=Head;

       }
       else{

           Node new_n=new Node(new_node);
           current.next=new_n;
           current=new_n;
       }
       }

      void delete_node(int del_value){

          Node n=Head;
          Node np=null;


          while(n.data!=del_value){
          np=n;
          n=n.next;}
         
          np.next=n.next;
      }


      void loop_from_the_end(){

      Node node=Head;

      while(node.next!=null){
          node=node.next;
          }

      node.next=Head;
      System.out.println("node.next "+node.next);
      System.out.println("Head "+Head);



      }



      void loop_from_anywhere(){

      Map<Node,String> map=new HashMap<Node,String>();
      Node nn=Head;
      int p=8;
      while(p>0){
      if(map.containsKey(nn)==false){
      map.put(nn, null);
      nn=nn.next;

      }
      else{System.out.println("LOOP node-node "+nn.next);}

      p--;}

      }


       public void printList()
	{
		Node tnode = Head;
		while (tnode != null)
		{       System.out.print(tnode.data+" ");
			tnode = tnode.next;}}



    public static void main(String[] args) {
        // TODO code application logic here


        Link list=new Link();

        System.out.println("LINKLIST");
        list.insert(1);
        list.insert(2);

        list.insert(3);
        list.insert(4);

        list.insert(5);
        list.insert(6);

        list.insert(7);
        list.insert(8);

         list.printList();


         System.out.println("\n");
         System.out.println("LIST after deletion");
         list.delete_node(4);

         list.printList();

         System.out.println("\n");

         System.out.println("loop node");
         //list.loop_from_the_end();

         list.loop_from_anywhere();

    }

}
